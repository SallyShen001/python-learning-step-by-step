"""
Given a list A of size n and an integer X. 
Find and print if there's a triplet in the list which sums up to the given integer X. 
If there are more than one such triplet print all.

Example:
Input: n = 5, X = 10, A = [1 2 4 3 6 7]
Output: [1,3,6], [1,2,7]

Explanation: The triplet {1, 3, 6} and {1, 2, 7} in the array sums up to 10.
"""
def findTriplet(a,X):    #a list, n len(a), X sum
  a.sort                 # first sort
  n = len(a)
  for i in range(n-2):  
    left = i+1
    right= n-1
    while left < right:
      currentsum = a[i]+a[left]+a[right]
      if currentsum < X:
        left += 1
      elif currentsum > X:
        right -= 1
      else:
        print(a[i],a[left],a[right])
        right -= 1
        left += 1
  return

a = [1,2,3,4,5,7,6]
X =  11
findTriplet(a, X)
        
        
      
